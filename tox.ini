[tox]
minversion = 3.21
# relies on the correct version of Python installed
envlist = ruff,tests,mypy
# https://github.com/tox-dev/tox/issues/20#issuecomment-247788333
# hack to prevent .tox from crapping to the project directory
toxworkdir = {env:TOXWORKDIR_BASE:}{toxinidir}/.tox

[testenv]
# TODO how to get package name from setuptools?
package_name = "my"
passenv =
# useful for tests to know they are running under ci
    CI
    CI_*
# respect user's cache dirs to prevent tox from crapping into project dir
    PYTHONPYCACHEPREFIX
    MYPY_CACHE_DIR
    RUFF_CACHE_DIR
setenv =
    HPI_MODULE_INSTALL_USE_UV=true

# default is 'editable', in which tox builds wheel first for some reason? not sure if makes much sense
package = uv-editable


[testenv:ruff]
skip_install = true
dependency_groups = testing
commands =
    {envpython} -m ruff check src/ \
        {posargs}


[testenv:tests]
dependency_groups =
    testing
extras =
    optional
    hpi
deps =
    uv  # for hpi module install
commands =
    {envpython} -m my.core module install \
        my.orgmode \
        my.time.tz.via_location \
        my.reddit.rexport
    # posargs allow test filtering, e.g. tox ... -- -k test_name
    {envpython} -m pytest \
        --pyargs {[testenv]package_name} \
        # FIXME sort these out later..
        --ignore src/my/util/hpi_heartbeat.py \
        {posargs}


[testenv:mypy]
# somewhat dirty trick to force mypy to check _this_ namespace package
# otherwise it may end up trying to check 'main' HPI package
# see https://github.com/python/mypy/issues/16683
# another option may be to reorder __editable__ paths here..
setenv =
    MYPYPATH=src
dependency_groups =
    testing
extras =
    optional
    hpi
deps =
    orgparse
commands =
    {envpython} -m mypy --no-install-types \
        -p {[testenv]package_name}       \
        # txt report is a bit more convenient to view on CI
        --txt-report  .coverage.mypy     \
        --html-report .coverage.mypy     \
        {posargs}
